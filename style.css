* {
  /*Como alguns navegadores possuem padrões diferentes para margin e padding, é interessante definir ambas para zero, tendo um controle maior da aparência do projeto */
  margin: 0;
  padding: 0;
  /*Para que seja preservado o tamanho das caixas e o espaçamento definido no projeto, é importante utilizar o box-sizing: border-box*/
  box-sizing: border-box;
}

body {
  background-color: #121215;
  color: #eaeaea;
  font-family: 'Roboto', sans-serif; /*se a primeira fonte Roboto não funcionar, então será utilizada a próxima, no caso a sans-serif */

}

nav {
  padding: 64px;
}

.memory {
  display: flex; /*fica tudo um do lado do outro*/
  flex-direction: column; /*fica tudo um embaixo do outro */
  gap: 16px; /*colocar espaçamento entre as caixas */
  text-decoration: none; /*para retirar a linha que ficou sublinhando todos os textos para apontar que se trata de um link */
  margin-bottom: 64px; /*para inserir uma espaço entre cada postagem que começa com a data */

}
/*Para acessar uma id que tem peso 100, utilizamos #id, para acessar uma classe que tem peso 10, utilizamos .class, para acessar um elemento que tem peso 1, utilizamos element (o próprio nome do elemento). Para acessar o elemento small dentro da div que tem a classe memory, basta colocar primeiro a classe e depois informar o elemento*/
.memory small {
  color: #bebebf;
  font-size: 12px;
} 

.memory h1 {
  font-size: 32px;
  color: #eaeaea;
}

.memory img {
  width: 100%;
  height: 280px;
  /*Para a imagem não ficar desproporcional, utilizamos a propriedade object-fit: cover, dessa forma ela vai acompanhar de forma proporcional o aumento ou diminuição do tamanho da página*/
  object-fit: cover;
  border-radius: 8px;
}

.memory p {
  font-size: 18px;
  color: #bebebf;
  line-height: 28px;
}